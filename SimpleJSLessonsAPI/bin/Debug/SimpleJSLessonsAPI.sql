/*
Deployment script for SimpleJSLessonsAPI

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SimpleJSLessonsAPI"
:setvar DefaultFilePrefix "SimpleJSLessonsAPI"
:setvar DefaultDataPath "C:\Users\David Nguyen\AppData\Local\Microsoft\VisualStudio\SSDT\SimpleJSLessonsAPI"
:setvar DefaultLogPath "C:\Users\David Nguyen\AppData\Local\Microsoft\VisualStudio\SSDT\SimpleJSLessonsAPI"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key c2cc0194-d326-4b9a-8c3b-4f8fda3bf0be is skipped, element [dbo].[DataTable].[public] (SqlSimpleColumn) will not be renamed to isPublic';


GO
PRINT N'Rename refactoring operation with key af476e26-774d-42ac-b208-fac1078f679e is skipped, element [dbo].[UserSavedDemos].[public] (SqlSimpleColumn) will not be renamed to isPublic';


GO
PRINT N'Dropping Foreign Key [dbo].[AuthorsToData]...';


GO
ALTER TABLE [dbo].[Authors] DROP CONSTRAINT [AuthorsToData];


GO
PRINT N'Altering Table [dbo].[apiUser]...';


GO
ALTER TABLE [dbo].[apiUser]
    ADD [profileData] VARCHAR (MAX) NULL;


GO
PRINT N'Starting rebuilding table [dbo].[Authors]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Authors] (
    [Id]           INT          IDENTITY (1, 1) NOT NULL,
    [dataHash]     VARCHAR (24) NOT NULL,
    [username]     VARCHAR (20) NOT NULL,
    [dateAuthored] DATETIME     NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Authors])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Authors] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Authors] ([Id], [dataHash], [username], [dateAuthored])
        SELECT   [Id],
                 [dataHash],
                 [username],
                 [dateAuthored]
        FROM     [dbo].[Authors]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Authors] OFF;
    END

DROP TABLE [dbo].[Authors];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Authors]', N'Authors';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Table [dbo].[CommentsTable]...';


GO
CREATE TABLE [dbo].[CommentsTable] (
    [Id]                    INT           IDENTITY (1, 1) NOT NULL,
    [datahash]              VARCHAR (24)  NOT NULL,
    [commentAuthorUsername] VARCHAR (30)  NOT NULL,
    [comment]               VARCHAR (255) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[dataDataTable]...';


GO
CREATE TABLE [dbo].[dataDataTable] (
    [Id]         INT           IDENTITY (1, 1) NOT NULL,
    [imageData]  VARCHAR (MAX) NOT NULL,
    [dataHash]   VARCHAR (24)  NOT NULL,
    [uploadedBy] VARCHAR (24)  NULL,
    [title]      VARCHAR (128) NULL,
    [isPublic]   INT           NOT NULL,
    [uploadDate] DATE          NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [uniqueImgToData] UNIQUE NONCLUSTERED ([uploadedBy] ASC, [dataHash] ASC)
);


GO
PRINT N'Creating Table [dbo].[LikesTable]...';


GO
CREATE TABLE [dbo].[LikesTable] (
    [Id]       INT          IDENTITY (1, 1) NOT NULL,
    [dataHash] VARCHAR (24) NOT NULL,
    [username] VARCHAR (30) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [unique_likes] UNIQUE NONCLUSTERED ([dataHash] ASC, [username] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[AuthorsToData]...';


GO
ALTER TABLE [dbo].[Authors] WITH NOCHECK
    ADD CONSTRAINT [AuthorsToData] FOREIGN KEY ([dataHash]) REFERENCES [dbo].[DataTable] ([dataHash]);


GO
PRINT N'Creating Foreign Key [dbo].[reference_to_realuser_fromCommentsTable]...';


GO
ALTER TABLE [dbo].[CommentsTable] WITH NOCHECK
    ADD CONSTRAINT [reference_to_realuser_fromCommentsTable] FOREIGN KEY ([commentAuthorUsername]) REFERENCES [dbo].[apiUser] ([username]);


GO
PRINT N'Creating Foreign Key [dbo].[validDataReference]...';


GO
ALTER TABLE [dbo].[dataDataTable] WITH NOCHECK
    ADD CONSTRAINT [validDataReference] FOREIGN KEY ([dataHash]) REFERENCES [dbo].[DataTable] ([dataHash]);


GO
PRINT N'Creating Foreign Key [dbo].[reference_to_realuser]...';


GO
ALTER TABLE [dbo].[LikesTable] WITH NOCHECK
    ADD CONSTRAINT [reference_to_realuser] FOREIGN KEY ([username]) REFERENCES [dbo].[apiUser] ([username]);


GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c2cc0194-d326-4b9a-8c3b-4f8fda3bf0be')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c2cc0194-d326-4b9a-8c3b-4f8fda3bf0be')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'af476e26-774d-42ac-b208-fac1078f679e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('af476e26-774d-42ac-b208-fac1078f679e')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Authors] WITH CHECK CHECK CONSTRAINT [AuthorsToData];

ALTER TABLE [dbo].[CommentsTable] WITH CHECK CHECK CONSTRAINT [reference_to_realuser_fromCommentsTable];

ALTER TABLE [dbo].[dataDataTable] WITH CHECK CHECK CONSTRAINT [validDataReference];

ALTER TABLE [dbo].[LikesTable] WITH CHECK CHECK CONSTRAINT [reference_to_realuser];


GO
PRINT N'Update complete.';


GO
